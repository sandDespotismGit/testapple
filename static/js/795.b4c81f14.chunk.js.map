{"version":3,"file":"static/js/795.b4c81f14.chunk.js","mappings":"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","sources":["components/GetDimensions.jsx","components/productCarousel.jsx","components/teletypeCarousel.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import { FreeMode } from \"swiper/modules\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport TeletypeCarousel from \"./teletypeCarousel\";\r\nimport profile_test from \"./../images/profile_test.jpg\";\r\nimport useWindowDimensions from \"./GetDimensions\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\n\r\nfunction ProductCarousel() {\r\n  const [carouselInfo, setCarouselInfo] = useState([\r\n    \"название\",\r\n    \"цена\",\r\n    [\"url\", \"url\"],\r\n  ]);\r\n  const [price, setPrice] = useState(0);\r\n  const [currency, setCurrency] = useState(\"RUB\");\r\n  useEffect(() => {\r\n    fetch(\"https://pop.applepodsblack.ru/api/products?populate=deep\")\r\n      .then((response) => response.json())\r\n      .then(function (commits) {\r\n        let data = commits.data;\r\n        let buffer = [];\r\n        let urls = [];\r\n        buffer[0] = data[window.GlobalProductId - 1].attributes.name;\r\n        buffer[1] = data[window.GlobalProductId - 1].attributes.rub_price;\r\n        urls[0] =\r\n          \"https://pop.applepodsblack.ru/\" +\r\n          data[window.GlobalProductId - 1].attributes.main_photo.data.attributes\r\n            .url;\r\n        for (let photo of data[window.GlobalProductId - 1].attributes.photo\r\n          .data) {\r\n          urls.push(\"https://pop.applepodsblack.ru/\" + photo.attributes.url);\r\n        }\r\n        buffer[2] = urls;\r\n        buffer[3] = data[window.GlobalProductId - 1].attributes.eur_price;\r\n        buffer[4] = data[window.GlobalProductId - 1].attributes.byn_price;\r\n        setCarouselInfo(buffer);\r\n        setPrice(buffer[1]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Swiper slidesPerView={1} modules={[FreeMode]} freeMode={true}>\r\n          <SwiperSlide>\r\n            <img\r\n              className=\"product_img_carousel\"\r\n              src={carouselInfo[2][0]}\r\n            ></img>\r\n          </SwiperSlide>\r\n          <SwiperSlide>\r\n            <img\r\n              className=\"product_img_carousel\"\r\n              src={carouselInfo[2][1]}\r\n            ></img>\r\n          </SwiperSlide>\r\n          <SwiperSlide>\r\n            <img\r\n              className=\"product_img_carousel\"\r\n              src={carouselInfo[2][2]}\r\n            ></img>\r\n          </SwiperSlide>\r\n        </Swiper>\r\n      </div>\r\n      <div id=\"main_product_info\">\r\n        <p id=\"main_info_product_name\">{carouselInfo[0]}</p>\r\n        <div className=\"select_currency\">\r\n          <p>Выберите валюту</p>\r\n        </div>\r\n        <div id=\"main_info_product_price\">\r\n          <p id=\"gold_price\">{price}</p>\r\n          <div id=\"main_info_currencylogo\">\r\n            {currency}\r\n            <select\r\n              id=\"currency_choose\"\r\n              onChange={(event) => {\r\n                setCurrency(event.target.value.toUpperCase());\r\n                if (event.target.value == \"rub\") setPrice(carouselInfo[1]);\r\n                else if (event.target.value == \"eur\") setPrice(carouselInfo[3]);\r\n                else setPrice(carouselInfo[4]);\r\n              }}\r\n            >\r\n              <option value=\"rub\">₽</option>\r\n              <option value=\"eur\">€</option>\r\n              <option value=\"byn\">Br</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div id=\"choose_color\">\r\n          <p>Цвет корпуса</p>\r\n          <div className=\"color_variants\">\r\n            <img className=\"variant\" src={carouselInfo[2][0]}></img>\r\n            <img className=\"variant\" src={carouselInfo[2][1]}></img>\r\n            <img className=\"variant\" src={carouselInfo[2][2]}></img>\r\n          </div>\r\n        </div>\r\n        <div id=\"stories\">\r\n          <p>Полезная информация</p>\r\n          <Swiper slidesPerView={3}>\r\n            <SwiperSlide>\r\n              <div className=\"story_block\">\r\n                <div>\r\n                  <p>Заголовок статьи в три строки</p>\r\n                </div>\r\n              </div>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <div className=\"story_block\">\r\n                <div>\r\n                  <p>Заголовок статьи в три строки</p>\r\n                </div>\r\n              </div>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <div className=\"story_block\">\r\n                <div>\r\n                  <p>Заголовок статьи в три строки</p>\r\n                </div>\r\n              </div>\r\n            </SwiperSlide>\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductCarousel;\r\n","import { FreeMode } from \"swiper/modules\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport useWindowDimensions from \"./GetDimensions\";\r\nfunction TeletypeCarousel() {\r\n  const {height, width} = useWindowDimensions();\r\n  const [teletype, setTeletype] = useState('teletype_block')\r\n  useEffect(() => {\r\n    if (width < 410){\r\n      setTeletype('teletype_block_small')\r\n    } else if ( width >= 410 ){\r\n      setTeletype('teletype_block')\r\n    }\r\n  })\r\n  return (\r\n    <div id=\"teletype_carousel_div\">\r\n      <div></div>\r\n      <Swiper  modules={[FreeMode]} freeMode={true} slidesPerView={3}>\r\n        <SwiperSlide>\r\n          <div className={teletype}>\r\n            <div>\r\n              <p>Заголовок статьи в три строки</p>\r\n            </div>\r\n          </div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div className={teletype}>\r\n            <div>\r\n              <p>Заголовок статьи в три строки</p>\r\n            </div>\r\n          </div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div className={teletype}>\r\n            <div>\r\n              <p>Заголовок статьи в три строки</p>\r\n            </div>\r\n          </div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div className={teletype}>\r\n            <div>\r\n              <p>Заголовок статьи в три строки</p>\r\n            </div>\r\n          </div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div className={teletype}>\r\n            <div>\r\n              <p>Заголовок статьи в три строки</p>\r\n            </div>\r\n          </div>\r\n        </SwiperSlide>\r\n      </Swiper>\r\n    </div>\r\n  );\r\n}\r\nexport default TeletypeCarousel;\r\n"],"names":["getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","useWindowDimensions","_useState","useState","_useState2","_slicedToArray","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","carouselInfo","setCarouselInfo","_useState3","_useState4","price","setPrice","_useState5","_useState6","currency","setCurrency","fetch","then","response","json","commits","data","buffer","urls","GlobalProductId","attributes","name","rub_price","main_photo","url","_step","_iterator","_createForOfIteratorHelper","photo","s","n","done","value","push","err","e","f","eur_price","byn_price","_jsxs","children","_jsx","Swiper","slidesPerView","modules","FreeMode","freeMode","SwiperSlide","className","src","id","onChange","event","target","toUpperCase","_useWindowDimensions","teletype","setTeletype"],"sourceRoot":""}